<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ on Go-–ö–æ—Ç—è—Ä–∞ - –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ Golang</title><link>/tags/%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5/</link><description>Recent content in –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ on Go-–ö–æ—Ç—è—Ä–∞ - –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ Golang</description><generator>Hugo</generator><language>ru-ru</language><lastBuildDate>Sun, 12 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>88. –ë—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã</title><link>/tour/88-buffered-channels/</link><pubDate>Sun, 12 Oct 2025 00:00:00 +0000</pubDate><guid>/tour/88-buffered-channels/</guid><description>&lt;p&gt;–ö–∞–Ω–∞–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å –±—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏. –ü–µ—Ä–µ–¥–∞–π—Ç–µ –¥–ª–∏–Ω—É –±—É—Ñ–µ—Ä–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ make –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;ch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;chan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –±—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –±—É—Ñ–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω. –ü–æ–ª—É—á–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±—É—Ñ–µ—Ä –ø—É—Å—Ç.&lt;/p&gt;
&lt;p&gt;–ò–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –ø–µ—Ä–µ–ø–æ–ª–Ω–∏—Ç—å –±—É—Ñ–µ—Ä, –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç.&lt;/p&gt;
&lt;div class="go-playground" id="playground-example1"&gt;
&lt;div class="playground-header"&gt;
 &lt;h4&gt;Go Playground&lt;/h4&gt;
 &lt;div class="playground-actions"&gt;
 &lt;button class="playground-btn" onclick="runGoCode('example1')"&gt;
 ‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å
 &lt;/button&gt;
 &lt;button class="playground-btn" onclick="formatGoCode('example1')"&gt;
 üõ† –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å
 &lt;/button&gt;
 &lt;button class="playground-btn" onclick="resetGoCode('example1')"&gt;
 ‚ü≥ –°–±—Ä–æ—Å–∏—Ç—å
 &lt;/button&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;div class="code-editor"&gt;
 &lt;div class="line-numbers" id="line-numbers-example1"&gt;&lt;/div&gt;
&lt;textarea
 id="go-code-example1"
class="go-code-textarea"
placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Go –∫–æ–¥ –∑–¥–µ—Å—å..."
spellcheck="false"
oninput="updateLineNumbers('example1')"
onscroll="syncScroll('example1')"&gt;
package main

import (
 &amp;#34;fmt&amp;#34;
 &amp;#34;time&amp;#34;
)

/*
func main() {
 ch := make(chan int, 2)
 ch &amp;lt;- 1
 ch &amp;lt;- 2
 fmt.Println(&amp;lt;-ch) // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º 1 —Å–ª–æ—Ç
 fmt.Println(&amp;lt;-ch) // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º 1 —Å–ª–æ—Ç

 ch &amp;lt;- 3 // –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë
	ch &amp;lt;- 4 
	
	 fmt.Println(&amp;lt;-ch) // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º 1 —Å–ª–æ—Ç
	 	 fmt.Println(&amp;lt;-ch) // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º 1 —Å–ª–æ—Ç
		 
 
 // –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è:
 ch &amp;lt;- 4 // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ - –±—É—Ñ–µ—Ä —Å–Ω–æ–≤–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω
 // ch &amp;lt;- 5 // –ï—Å–ª–∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å - deadlock!
	fmt.Println(&amp;lt;-ch)
	fmt.Println(&amp;lt;-ch)
}
*/
/*
func main() {
 ch := make(chan int)
 // ch &amp;lt;- 42 // –û—Ç–ø—Ä–∞–≤–∫–∞ (–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç)
 fmt.Println(ch)
 //val := &amp;lt;-ch // –ü–æ–ª—É—á–µ–Ω–∏–µ (–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—é–¥–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ–π–¥–µ—Ç)
 //fmt.Println(val)
}*/

func worker(ch chan int) {
 val := &amp;lt;-ch
 fmt.Println(val)
}

func worker2(ch chan int) {
 val := &amp;lt;-ch
 fmt.Println(val)
}

func main() {
 ch := make(chan int)
 go worker(ch)
 ch &amp;lt;- 42
 time.Sleep(time.Second)
}

&lt;/textarea&gt;
&lt;/div&gt;

&lt;div class="playground-output"&gt;
 &lt;div class="output-header"&gt;
 &lt;span&gt;–í—ã–≤–æ–¥:&lt;/span&gt;
 &lt;button class="clear-btn" onclick="clearOutput('example1')"&gt;
 –û—á–∏—Å—Ç–∏—Ç—å
 &lt;/button&gt;
 &lt;/div&gt;
 &lt;pre id="output-example1" class="output-content"&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item></channel></rss>